System.register("chunks:///_virtual/MultTextures.ts",["cc","./env"],(function(t){var e,r,a,i,s,n,u,l,c,h,o,f,d,p,D,m,y,_,M,x,g;return{setters:[function(t){e=t.cclegacy,r=t.gfx,a=t.Material,i=t.Component,s=t.ImageAsset,n=t.Texture2D,u=t.game,l=t.Game,c=t.director,h=t.Director,o=t.StencilManager,f=t.resources,d=t.renderer,p=t.murmurhash2_32_gc,D=t.Color,m=t.Label,y=t.BitmapFont,_=t.Sprite,M=t.MotionStreak,x=t.TiledLayer},function(t){g=t.JSB}],execute:function(){e._RF.push({},"bd7e7vtojdMUJODlbuIb/Yi","MultTextures",void 0);r.Texture.prototype.texID=-1,a.prototype.isMult=!1,i.prototype.useMult=!1;const I=t("MultBatch2D",{native:!1,enable:!1,parent:null,incID:0,count:0,hash:0,reset:function(){this.incID+=this.count,this.count=0}}),b=new s({width:1,height:1,_compressed:!1,format:r.Format.RGBA32F,_data:new Float32Array(4).fill(0)}),T=new n;T.setFilters(1,1),T.image=b,T.addRef();const V=function(){I.enable=!1,f.load("multTextures/Mult-material",a,((t,r)=>{if(!t){let t=e.builtinResMgr.get("ui-sprite-material");t&&(t._hash=I.hash=a.getHash(t),I.parent=r,I.enable=!0,r.addRef())}}))};let U=0,S=[];u.once(l.EVENT_GAME_INITED,(()=>{I.native||V()}));const A=function(t,e,r,a){const i=r.renderData,s=i.chunk,n=i.data,u=s.vb,l=i.vertexCount;if(t.hasChangedFlags||1===i.dataDirty){let e=t.worldMatrix,r=e.m00,i=e.m01,s=e.m02,c=e.m03,h=e.m04,o=e.m05,f=e.m06,d=e.m07,p=e.m12,D=e.m13,m=e.m14,y=e.m15,_=1/255,M=0;for(let t=0;t<l;t++){const e=n[t],l=e.x,x=e.y;let g=c*l+d*x+y;g=g?1/g:1,u[M+0]=(r*l+h*x+p)*g,u[M+1]=(i*l+o*x+D)*g,u[M+2]=(s*l+f*x+m)*g,u[M+5]=a.r*_,u[M+6]=a.g*_,u[M+7]=a.b*_,u[M+8]=a.a*_,M+=9}}s.bufferId;const c=s.vertexOffset,h=s.meshBuffer,o=s.meshBuffer.iData;let f=h.indexOffset;for(let t=0,e=l/4;t<e;t++){const e=c+4*t;o[f++]=e,o[f++]=e+1,o[f++]=e+2,o[f++]=e+1,o[f++]=e+3,o[f++]=e+2}h.setDirty(),h.indexOffset+=i.indexCount};u.once(l.EVENT_ENGINE_INITED,(()=>{if(I.native)return;!function(){const t=new D(255,255,255,255),e=new D(255,255,255,255),r=function(e,r){const a=e.node;t.set(e.color),t.a=255*a._uiProps.opacity,A(a,0,e,t)},a=function(t,r){if(!t.renderData)return;const a=t.node;e.a=255*a._uiProps.opacity,A(a,0,t,e)};m.prototype.useMult=!0;const i=m.Assembler;if(i){const t=i.getAssembler;i.getAssembler=function(e){const i=t.call(this,e);if(null==i.changeUV){i.changeUV=function(t){let e=t.renderData;e&&(e.dataDirty=1)};const t=i.updateUVs;t&&(e.font instanceof y||e.cacheMode===m.CacheMode.CHAR?i.updateUVs=function(e){t.call(this,e),this.changeUV(e)}:i.updateUVs=function(e){t.call(this,e),e.renderData&&e.ttfSpriteFrame&&this.changeUV(e)})}return e.font instanceof y?i.fillBuffers=r:i.fillBuffers=a,i}}}(),function(){_.prototype.useMult=!0;const t=_.Assembler;if(t){const e=t.getAssembler;t.getAssembler=function(t){const r=e.call(this,t);if(null==r.changeUV){r.changeUV=function(t){let e=t.renderData;e&&(e.dataDirty=1)};const e=r.updateUVs;e&&(t.type==_.Type.FILLED?t.fillType!=_.FillType.RADIAL&&(r.updateUVs=function(t,r,a){e.call(this,t,r,a),this.changeUV(t)}):t.type!=_.Type.TILED&&(r.updateUVs=function(t){e.call(this,t),t.spriteFrame&&this.changeUV(t)}));const a=r.updateWorldVertexAndUVData;a&&(r.updateWorldVertexAndUVData=function(t,e){a.call(this,t,e),this.changeUV(t)})}return r}}}(),function(){const t=e.UI.RenderData.prototype;t.texID=-1,t.isMult=!1,t.matDirty=!0,t.texDirty=!0,t.dataDirty=0,t.updateHash=function(){if(this.isMult&&I.enable){const t=`${this.chunk?this.chunk.bufferId:-1}${this.layer}98k`;this.dataHash=p(t,666),this.hashDirty=!1}else{const t=`${this.chunk?this.chunk.bufferId:-1}${this.layer} ${this.textureHash}`;this.dataHash=p(t,666),this.hashDirty=!1}this.matDirty=!1},Object.defineProperty(t,"textureDirty",{get:function(){return this.texDirty},set:function(t){this.texDirty=t,!0===t&&(this.texID=-1)}});const r=function(t,e){t.isMult=!1;let r=e.getRenderMaterial(0);r&&I.enable&&e.useMult&&!t._isMeshBuffer&&(r._hash=r.hash||r._hash,r._hash||(r._hash=a.getHash(r)),t.isMult=I.hash==r._hash)},i=t.updatePass;t.updatePass=function(t){r(this,t),i.call(this,t)};const s=t.updateRenderData;t.updateRenderData=function(t,e){this.passDirty&&r(this,t),s.call(this,t,e)}}(),function(){if(x&&!g){const t=x.prototype;t.useMult=!0,t.dataDirty=!1;const e=t.setUserNodeDirty;t.setUserNodeDirty=function(t){e.call(this,t),t||(this.dataDirty=!0)},t._render=function(t){const e=this.node.layer;for(let r=0,a=0;r<this._tiledDataArray.length;r++){this._tiledDataArrayIdx=r;const i=this._tiledDataArray[r];if(this._drawInfoList[a],i.subNodes)i.subNodes.forEach((e=>{e&&(t.walk(e.node),a++)}));else{const r=i;if(r.texture){let i=!1,s=r.renderData;s.material=this.getRenderMaterial(0),s.texture!==r.texture&&(s.texture=r.texture),s.layer!==e&&(s.layer=e,i=!0),s.isMult=!0,i&&s.updateHash(),this.dataDirty&&(s.dataDirty=1),t.commitComp(this,r.renderData,r.texture,this._assembler,null),a++}}}this.dataDirty=!1,this.node._static=!0}}}(),function(){if(M){const t=M.prototype;t.useMult=!0;const e=t.lateUpdate;t.lateUpdate=function(t){if(e.call(this,t),this._assembler&&this.points.length>=2){let t=this.renderData;t&&(t.dataDirty=1)}}}}(),c.on(h.EVENT_AFTER_DRAW,(t=>{I.reset(),U=0}));const t=e.internal.Batcher2D.prototype;t.isMult=!1,t.isNative=g,t.cacheTextures=[],t.currMaterial=null,Object.defineProperty(t,"_currMaterial",{get:function(){return this.currMaterial},set:function(t){let e=this._currRenderData;t==this._emptyMaterial&&(e=null),this.currMaterial=function(t,e){void 0===e&&(e=null);let r=I;if(r.reset(),!(r.enable&&t&&e&&e.isMult))return t;if(!r.parent||!r.parent.isValid)return V(),t;let a=S[U++];if(!a||!a.isValid){let t={parent:r.parent};a=new d.MaterialInstance(t),S[U-1]=a,a.cacheTextures=[],a.isMult=!0,a.addRef()}return a}(t,e),this.isMult=!1,I.enable&&this.currMaterial&&this.currMaterial.isMult&&(this.cacheTextures=this.currMaterial.cacheTextures,this.isMult=!0)}});t.commitComp=function(t,e,r,a,i){let s=0,n=null,u=-1;if(e&&e.chunk){if(!e.isValid())return;s=e.dataHash,n=e.material,u=e.chunk.bufferId}2===t.stencilStage||6===t.stencilStage?this._insertMaskBatch(t):t._stencilStage=o.sharedManager.stage;const l=t.stencilStage;let c=-1,h=null,f=I,d=!1,p=this.isNative;if(f.enable&&e&&e.isMult&&(r&&r.isValid&&(h=r.getGFXTexture()),h&&(void 0===h.texID&&(h.texID=-1),c=h.texID-f.incID,d=c<0&&f.count>=8,this.isMult&&(n=this._currMaterial))),(d||this._currHash!==s||0===s||this._currMaterial!==n||this._currDepthStencilStateStage!==l)&&(this.autoMergeBatches(this._currComponent),p||!e||e._isMeshBuffer||this.updateBuffer(e.vertexFormat,u),this._currRenderData=e,this._currHash=e?e.dataHash:0,this._currComponent=t,this._currTransform=i,this._currMaterial=t.getRenderMaterial(0),this._currDepthStencilStateStage=l,this._currLayer=t.node.layer,r?(this._currTexture=r.getGFXTexture(),this._currSampler=r.getGFXSampler(),this._currTextureHash=r.getHash(),this._currSamplerHash=this._currSampler.hash):(this._currTexture=null,this._currSampler=null,this._currTextureHash=0,this._currSamplerHash=0)),!p&&a.fillBuffers&&a.fillBuffers(t,this),h&&this.isMult){if(c<0||0===f.count){c=f.count++,h.texID=c+f.incID;let t=this.cacheTextures;t[c]!==h&&(t[c]=h,h=r.texture,h||(h=r),this._currMaterial.setProperty("texture"+c,h))}this.fillTextureID(e,c),p&&e.renderDrawInfo.setMaterial(this._currMaterial)}},t.fillTextureID=function(t,e){let r=t.chunk.vb,a=0,i=r.length;if(1===t.dataDirty)for(let t=0;t<i;t+=9)a=~~(1e5*r[t+3]),r[t+3]=10*a+e;else if(t.texID!==e)for(let t=0;t<i;t+=9)a=~~(.1*r[t+3]),r[t+3]=10*a+e;t.dataDirty=0,t.texID=e}})),e._RF.pop()}}}));

System.register("chunks:///_virtual/resources",["./MultTextures.ts"],(function(){return{setters:[null],execute:function(){}}}));

(function(r) {
  r('virtual:///prerequisite-imports/resources', 'chunks:///_virtual/resources'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});